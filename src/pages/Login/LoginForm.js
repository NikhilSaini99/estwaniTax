import React, { useEffect, useState } from 'react'
import { useForm, Controller } from 'react-hook-form'
import { useDispatch, useSelector } from 'react-redux'
import { updateLoginState } from "@/features/formSlice"
import CustomButton from "@/components/Button"
import CustomTextField from '@/components/CustomTextField'
import { Box, Typography } from '@mui/material'
import Head from 'next/head'
import bgImg from "../../../public/assets/background3.jpg"
import Link from 'next/link'
import axios from 'axios'
import Navbar from '@/components/Navbar'
import { useFetch } from '@/constants/useFetch'


export const bgImgStyling = {
    background: `url(${bgImg.src})`,
    zIndex: '-1',
    backgroundSize: 'cover', position: 'absolute', width: '100%', height: '100%'
}

const LoginForm = () => {
    const { data: loginData, fetchAPI } = useFetch('post', '/user/login')

    const dispatch = useDispatch()
    const loginFormValue = useSelector((state) => state.loginForm)
    const [userList, setUserList] = useState([])

    const { register, control, watch,
        handleSubmit,
        formState: { errors } } = useForm({
            defaultValues: {
                password: "",
                email_id: "",
            },
        })
       
    const onSubmit = () => {
        const watchData = watch()
        console.log('watcghin',watchData)
        dispatch(updateLoginState(watchData))
        gettingLogin(watchData);
    }

    useEffect(() => {
        // console.log(loginData)
    }, [loginData])

    const gettingLogin = (watchData) => {
        // console.log(watchData);
        fetchAPI(watchData);

    }
    // useEffect(() => {
    //     async function checking() {
    //         if (JSON.stringify(loginFormValue) === "{}") {
    //             return
    //         }
    //         // console.log(loginFormValue)

    //         const check = await axios({
    //             method: 'get',
    //             url: `${process.env.NEXT_PUBLIC_API_URL}/admin/user_list`
    //         })
    //             .then((res) => {
    //                 console.log(res.data)
    //                 return res.data.result.list
    //             })

    //         setUserList(check)
    //     }
    //     checking();

    // }, [loginFormValue])

    const formParentStyling = {
        width: { xs: '98%', lg: '40%' },
        margin: '0 auto',
        p: { xs: '0.5rem', lg: '2rem' },
        borderRadius: '20px',
        position: 'relative',
        top: '0',
        }

    return (
        <>
            <Head>
                <title>Eswatini Environment Authority</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.png" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
            </Head>

            <Navbar />
            {/* <Box sx={{ ...bgImgStyling }}>
            </Box> */}
            {userList.length >= 1 && console.log(userList)}
                <Box sx={{ ...formParentStyling }}>
                <Box className='flex flex-col gap-4 bg-white shadow-2xl p-4 rounded-xl  w-full sm:w-3/4 lg:w-full'
                    component='form' onSubmit={handleSubmit(onSubmit)}
                >
                    <Box sx={{ marginBottom: '2rem' }}>
                        <Typography variant='h1' sx={{ fontSize: { xs: '1.5rem', md: '2rem', lg: '3rem' }, color: '#2C306F' }}>
                            Get Started Now
                        </Typography>
                    </Box>
                    <Controller
                        control={control}
                        name="email_id"

                        // rules={{ required: 'Email is required' }}
                        render={({ field }) => <CustomTextField field={field} inputType='text'
                            fieldLabel='Enter Email' errorDetail='email_id' errors={errors}
                        />}>
                    </Controller>

                    <Controller
                        control={control}
                        name="password"
                        rules={{ required: 'Password is required' }}
                        render={({ field }) => <CustomTextField field={field} inputType='password'
                            fieldLabel='Enter Password' errorDetail='password' errors={errors}
                        />}>
                    </Controller>
                    <Box className="flex justify-center">
                        <CustomButton type='submit' text='Login In' bgColor='#1f892a' />
                    </Box>
                    {/* <Box className="flex justify-center">
                        <Link href='/Signup/Signup'><CustomButton text="New User?" bgColor='#2C306F' /></Link>
                    </Box> */}
                </Box>
            </Box>
        </>
    )
}

export default LoginForm

{/* <input type='email' defaultValue={loginFormValue.email}
                    {...register('email', { required: true })} />
                {errors.email && <p>This Field is required</p>} 

                 <input type='password' defaultValue={loginFormValue.password}
                    {...register('Password', { required: true })} />
                {errors.password && <p>This Field is required</p>} */}
{/* <button type="submit" className='rounded-full bg-black text-white px-5 py-1'>Login</button> */ }
